// Kadane's Algorithm

class Solution {
public:
    int maxSubArray(vector<int>& nums) {
    int cursum=0;
    int maxsum=INT_MIN;
    for(int i=0;i<nums.size();i++)
    {
        cursum+=nums[i];
        maxsum=max(maxsum,cursum);
        if(cursum<0)    //if sum becomes negative, reset it to zero
        {
            cursum=0;
        }
    }
    return maxsum;
        
    }
};

Time Complexity = O(n)
Space Complexity = O(1)
