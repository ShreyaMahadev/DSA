// Bubble Sort
// Repeatedly swap 2 adjacent elements, so that largest element goes to the end
// At the end of every iteration, the largest element is at the end of the array
// n elements, (n-1) iterations

#include <bits/stdc++.h> 
void bubbleSort(vector<int>& arr, int n)
{   
    
    for (int i = 0; i < n - 1; i++) {
            //bool swapped=false;
            for (int j = 0; j < n - i - 1; j++) {
                if (arr[j] > arr[j + 1]) {
                    swap(arr[j], arr[j + 1]);
                    //swapped=true;
                }
            }
            //if(swapped==false)
                //break;
        }
       
}

Time Complexity:
Best Case : O(n)
Avg. and Worst Case :O(n^2)
