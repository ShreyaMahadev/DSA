/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        ListNode* slow=head;
        ListNode* fast=head;
        for(int i=0;i<n;i++)
            fast=fast->next;
        if(fast==NULL)      //Edgecase:when n=no.of elements in linked list
            return head->next;  
        while(fast->next!=NULL){
            slow=slow->next;
            fast=fast->next;
        }  
        ListNode* delnode=slow->next;   //the node to be deleted
        slow->next=slow->next->next;    //changing links
        delete delnode;
        return head;     
    }
};
