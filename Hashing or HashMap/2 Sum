//Using unoredered_map

class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        unordered_map<int, int> mp; // value -> index

        for (int i = 0; i < nums.size(); i++) {
            int first=nums[i];
            int complement = target - first;

            // If complement already exists in the map, we found the pair
            if (mp.find(complement) != mp.end()) {
                return {mp[complement], i};// Return indices of the two numbers
            }
            mp[first] = i;
        }

        return {}; // If no solution
    }
};

TC : O(N)
SC : O(1)
